// Custom Breakpoints
$breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px,
);

// Media-Query Mixin
@mixin media($from: false, $until: false, $and: false, $media-type: all) {
  $min-width: 0;
  $max-width: 0;
  $query: '';

  //FROM: this breakpoint (inclusive)
  @if $from {
    @if type-of($from) == number {
      $min-width: $from;
    } @else {
      $min-width: map-get($breakpoints, $from);
    }
  }

  //UNTIL: this breakpoint (exclusive)
  @if $until {
    @if type-of($until) == number {
      $max-width: $until - 1px;
    } @else {
      $max-width: map-get($breakpoints, $until) - 1px;
    }
  }

  @if $min-width != 0 {
    $query: '#{$query} and (min-width: #{$min-width})';
  }
  @if $max-width != 0 {
    $query: '#{$query} and (max-width: #{$max-width})';
  }
  @if $and {
    $query: '#{$query} and (#{$and})';
  }

  @if ($media-type == 'all' and $query != '') {
    $media-type: '';
    $query: str-slice(unquote($query), 6);
  }

  /*   // hover: none
  @if ($media-type == 'mobile') {
    $media-type: '';
    $query: ' and (hover: none)';
  }
 */
  @media #{$media-type + $query} {
    @content;
  }
}

/* Usage:
.foo-bar {
  width: 50%;
  @include media($from: "sm", $until: 900px, $and:"orientation: landscape"){
      width: 100%;
  }
} */

@function toRem($value) {
  $remValue: (calc($value / 16)) + rem;
  @return $remValue;
}

// Button variants
//
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons

@mixin dpf-button(
  $color: $white,
  $background: $black,
  $outline: 1,
  $radius: 50,
  $arrow: 1
) {
  color: $color;
  @if $outline == 1 {
    background-color: transparent;
  } @else {
    background-color: $background;
  }

  @if $background == $yellow and $arrow == 1 {
    transition: all 0.5s ease;
    background-position: 120% 50%;
    background-repeat: no-repeat;
  }

  border: toRem($border-width) solid $background;
  border-radius: toRem($radius);

  &:focus,
  &.focus,
  &:hover {
    color: $black;
    @if $outline == 1 {
      color: $black;
    } @else {
      @if $background == $yellow and $arrow == 1 {
        color: $black;
      } @else {
        color: $white;
      }
    }
    background-color: $background;
    border-color: $background;

    @if $outline == 0 and $arrow == 1 {
      @if $background == $yellow {
        background-image: escape-svg($arrow-right-black);
      } @else {
        background-image: escape-svg($arrow-right-white);
      }

      background-position: 90% 50%;
      padding-right: toRem(80);
    } @else {
      background-image: none;
    }
  }

  &:active,
  &.active,
  .open > &.dropdown-toggle {
    color: $black;
    background-color: $background;
    background-image: none;
    border-color: $background;

    &:hover,
    &:focus,
    &.focus {
      color: $black;
      background-color: $background;
      border-color: $background;
    }
  }
  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &:hover,
    &:focus,
    &.focus {
      color: darkgrey;
      background-color: $lightgrey;
      border-color: $lightgrey;
    }
  }

  .badge {
    color: $background;
    background-color: $color;
  }
}

@mixin casesBoxItem() {
  .uagb-post__inner-wrap {
    padding: toRem(40);
    @include media($until: 'xl') {
      padding: toRem(30);
    }
    @include media($until: 'sm') {
      padding: toRem(20);
    }
    height: toRem(550);
    @include media($until: 'xl') {
      height: toRem(450);
    }

    .uagb-post__image {
      &::before {
        background-color: transparent;
        opacity: 1;
      }
    }
    .uagb-post__text {
      overflow: inherit;
      .uagb-post__title {
        font-family: 'Poppins Bold';
        font-size: toRem(35);
        margin-top: toRem(40);
        a {
          font-size: inherit;
          color: $white;
          &:hover {
            border: 0;
          }
        }
      }
      .uagb-post__excerpt {
        @include media($until: 'sm') {
          margin-right: toRem(50);
        }
      }
      .uagb-post-grid-byline {
        a {
          color: $white;
          font-size: toRem(16);
        }
      }
      &:nth-child(4) {
        font-family: 'Poppins SemiBold';
        position: absolute;
        top: 30px;
      }
      &:last-child {
        position: absolute;
        top: inherit;
        bottom: 0;
        display: block;
        color: $white;
        width: 100%;
        left: 0;
        padding: 0 toRem(30);
        @include media($from: 'xl') {
          padding: 0 toRem(40);
        }
        @include media($until: 'sm') {
          padding: 0 toRem(20);
        }
      }
    }
  }
}
