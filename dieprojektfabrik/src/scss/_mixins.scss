// Custom Breakpoints
$breakpoints: (
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px,
);
// Media-Query Mixin
@mixin media($from: false, $until: false, $and: false, $media-type: all) {
  $min-width: 0;
  $max-width: 0;
  $query: '';

  //FROM: this breakpoint (inclusive)
  @if $from {
    @if type-of($from) == number {
      $min-width: $from;
    } @else {
      $min-width: map-get($breakpoints, $from);
    }
  }

  //UNTIL: this breakpoint (exclusive)
  @if $until {
    @if type-of($until) == number {
      $max-width: $until - 1px;
    } @else {
      $max-width: map-get($breakpoints, $until) - 1px;
    }
  }

  @if $min-width != 0 {
    $query: '#{$query} and (min-width: #{$min-width})';
  }
  @if $max-width != 0 {
    $query: '#{$query} and (max-width: #{$max-width})';
  }
  @if $and {
    $query: '#{$query} and (#{$and})';
  }

  @if ($media-type == 'all' and $query != '') {
    $media-type: '';
    $query: str-slice(unquote($query), 6);
  }

  @media #{$media-type + $query} {
    @content;
  }
}

/* Usage:
.foo-bar {
  width: 50%;
  @include media($from: "sm", $until: 900px, $and:"orientation: landscape"){
      width: 100%;
  }
} */

@function toRem($value) {
  $remValue: ($value / 16) + rem;
  @return $remValue;
}

// Button variants
//
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons

@mixin dpf-button($color, $background, $outline, $radius) {
  color: $color;
  @if $outline == 1 {
    background-color: transparent;
  } @else {
    background-color: $background;
  }

  @if $background == $yellow {
    transition: all 0.5s ease;
    // transition: background-position 0.3s ease;
    background-position: 120% 50%;
    background-repeat: no-repeat;
  }

  border: toRem($border-width) solid $background;
  border-radius: toRem($radius);

  &:focus,
  &.focus,
  &:hover {
    color: $black;
    background-color: $background;
    border-color: $background;
  }

  &:active,
  &.active,
  .open > &.dropdown-toggle {
    color: $black;
    background-color: $background;
    background-image: none;
    border-color: $background;

    &:hover,
    &:focus,
    &.focus {
      color: $black;
      background-color: $background;
      border-color: $background;
    }
  }
  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &:hover,
    &:focus,
    &.focus {
      color: darkgrey;
      background-color: $lightgrey;
      border-color: $lightgrey;
    }
  }

  .badge {
    color: $background;
    background-color: $color;
  }
}
